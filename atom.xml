<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>空白のBlog</title>
  
  <subtitle>For the future</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-05T14:58:24.762Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>空白</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NC14247 Xorto</title>
    <link href="http://example.com/2022/07/05/NC14247%20Xorto/"/>
    <id>http://example.com/2022/07/05/NC14247%20Xorto/</id>
    <published>2022-07-05T14:45:54.000Z</published>
    <updated>2022-07-05T14:58:24.762Z</updated>
    
    <content type="html"><![CDATA[<p>概要：一道题。</p><span id="more"></span><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>题目描述</strong></p><p>给定一个长度为 $n$ 的整数数组，问有多少对互不重叠的非空区间，使得两个区间内的数的异或和为 $0$ 。</p><p><strong>输入描述</strong></p><p>第一行一个数 $n$ 表示数组长度；<br>第二行 $n$ 个整数表示数组；<br>$1 \leq n \leq 1000$, $0\leq 数组元素 &lt; 100000$ 。</p><p><strong>输出描述</strong></p><p>一行一个整数表示答案。</p><p><strong>示例1</strong></p><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">([1,1],[2,2]),([1,1],[3,3]),([1,1],[2,3]),([1,2],[3,3]),([2,2],[3,3])</span><br></pre></td></tr></table></figure><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><strong>知识点：前缀异或和+枚举。</strong></p><p>注意到区间是不重合但长度不定，考虑枚举左区间的右端点 $i$ 。对于某个左区间右端点 $i$ ，枚举左区间左端点 $j$ ，左区间可能被右区间重复匹配，考虑利用数组 $cnt$ 记录某个异或值的左区间个数；对于某个左区间右端点 $i$ ，固定右区间左端点为 $i+1$， 枚举右区间的右端点 $j$ ，与之前记录的 $cnt$ 进行匹配。</p><p>时间复杂度 $O(n^2)$</p><p>空间复杂度 $O(1)$</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1007</span>],cnt[<span class="number">2</span>*<span class="number">100000</span>+<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        a[i] ^= a[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;<span class="comment">///O（n^4）空间 大概1x10^12&gt;2*10^9</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">///向左遍历左区间的右端点i。对于一组相同端点的左区间，一定会被其右端点往后的点作为左端点的右区间遍历匹配，因此每次处理都保留</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j&lt;=i;j++)&#123;<span class="comment">///遍历以i为右端点的左区间的左端点</span></span><br><span class="line">            cnt[a[i]^a[j<span class="number">-1</span>]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i+<span class="number">1</span>;j&lt;=n;j++)&#123;<span class="comment">///遍历以i+1为左端点的右区间的右端点</span></span><br><span class="line">            ans+=cnt[a[j]^a[i]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;概要：一道题。&lt;/p&gt;</summary>
    
    
    
    <category term="算法笔记" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="枚举" scheme="http://example.com/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
</feed>
